---
source: crates/oxc_linter/src/tester.rs
---
  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:1:1]
 1 │ test("shows error", () => {});
   · ────
   ╰────
  help: Prefer using "it" instead of "test"

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:1:1]
 1 │ test.skip("shows error");
   · ────
   ╰────
  help: Prefer using "it" instead of "test"

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:1:1]
 1 │ test.only('shows error');
   · ────
   ╰────
  help: Prefer using "it" instead of "test"

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:1:25]
 1 │ describe('foo', () => { it('bar', () => {}); });
   ·                         ──
   ╰────
  help: Prefer using "test" instead of "it" within describe

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:2:1]
 1 │ import { test } from "vitest"
 2 │ test("shows error", () => {});
   · ────
   ╰────
  help: Prefer using "it" instead of "test"

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:1:1]
 1 │ it("shows error", () => {});
   · ──
   ╰────
  help: Prefer using "test" instead of "it"

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:1:27]
 1 │ describe("suite", () => { it("foo") })
   ·                           ──
   ╰────
  help: Prefer using "test" instead of "it" within describe

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:1:27]
 1 │ describe("suite", () => { test("foo") })
   ·                           ────
   ╰────
  help: Prefer using "it" instead of "test" within describe

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:1:1]
 1 │ test("foo")
   · ────
   ╰────
  help: Prefer using "it" instead of "test"

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:1:27]
 1 │ describe("suite", () => { test("foo") })
   ·                           ────
   ╰────
  help: Prefer using "it" instead of "test" within describe

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:1:1]
 1 │ it("foo")
   · ──
   ╰────
  help: Prefer using "test" instead of "it"

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:1:27]
 1 │ describe("suite", () => { test("foo") })
   ·                           ────
   ╰────
  help: Prefer using "it" instead of "test" within describe

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:1:1]
 1 │ it("foo")
   · ──
   ╰────
  help: Prefer using "test" instead of "it"

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:2:1]
 1 │ import { it } from "vitest"
 2 │ it("foo")
   · ──
   ╰────
  help: Prefer using "test" instead of "it"

  ⚠ eslint-plugin-vitest(consistent-test-it): Enforce `test` and `it` usage conventions
   ╭─[consistent_test_it.tsx:1:27]
 1 │ describe("suite", () => { it("foo") })
   ·                           ──
   ╰────
  help: Prefer using "test" instead of "it" within describe
