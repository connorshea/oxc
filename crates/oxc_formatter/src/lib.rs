#![allow(
    unused,
    clippy::inline_always,
    clippy::missing_panics_doc,
    clippy::needless_pass_by_ref_mut,
    clippy::todo,
    clippy::unused_self,
    clippy::enum_variant_names,
    clippy::struct_field_names
)] // FIXME: all these needs to be fixed.

mod generated {
    pub mod format;
}
mod formatter;
mod options;
mod parentheses;
mod utils;
mod write;

use oxc_allocator::{Address, Allocator, GetAddress};
use oxc_ast::{AstKind, ast::Program};
use oxc_ast_visit::Visit;
use rustc_hash::{FxHashMap, FxHashSet};

use crate::formatter::FormatContext;
pub use crate::options::*;

pub struct Formatter<'a> {
    allocator: &'a Allocator,
    source_text: &'a str,
    options: FormatOptions,
}

impl<'a> Formatter<'a> {
    pub fn new(allocator: &'a Allocator, options: FormatOptions) -> Self {
        Self { allocator, source_text: "", options }
    }

    pub fn build(mut self, program: &Program<'a>) -> String {
        let source_text = program.source_text;
        self.source_text = source_text;
        let context = FormatContext::new(program, self.options);
        let formatted = formatter::format(
            program,
            context,
            formatter::Arguments::new(&[formatter::Argument::new(program)]),
        )
        .unwrap();
        formatted.print().unwrap().into_code()
    }
}

fn build_connection_information(program: &Program<'_>) -> FxHashMap<Address, Address> {
    struct Starter<'a, 'b> {
        program: &'a Program<'b>,
        parents: FxHashMap<Address, Address>,
        kinds: FxHashMap<Address, AstKind<'a>>,
        current_address: Address,
    };
    impl<'a> Visit<'a> for Starter<'a, '_> {
        fn enter_node(&mut self, kind: AstKind<'a>) {
            let address = match kind {
                AstKind::Program(a) => Address::from_ptr(a),
                AstKind::IdentifierName(a) => Address::from_ptr(a),
                AstKind::IdentifierReference(a) => Address::from_ptr(a),
                AstKind::BindingIdentifier(a) => Address::from_ptr(a),
                AstKind::LabelIdentifier(a) => Address::from_ptr(a),
                AstKind::ThisExpression(a) => Address::from_ptr(a),
                AstKind::ArrayExpression(a) => Address::from_ptr(a),
                AstKind::ArrayExpressionElement(a) => Address::from_ptr(a),
                AstKind::Elision(a) => Address::from_ptr(a),
                AstKind::ObjectExpression(a) => Address::from_ptr(a),
                AstKind::ObjectProperty(a) => Address::from_ptr(a),
                AstKind::PropertyKey(a) => Address::from_ptr(a),
                AstKind::TemplateLiteral(a) => Address::from_ptr(a),
                AstKind::TaggedTemplateExpression(a) => Address::from_ptr(a),
                AstKind::MemberExpression(a) => Address::from_ptr(a),
                AstKind::CallExpression(a) => Address::from_ptr(a),
                AstKind::NewExpression(a) => Address::from_ptr(a),
                AstKind::MetaProperty(a) => Address::from_ptr(a),
                AstKind::SpreadElement(a) => Address::from_ptr(a),
                AstKind::Argument(a) => Address::from_ptr(a),
                AstKind::UpdateExpression(a) => Address::from_ptr(a),
                AstKind::UnaryExpression(a) => Address::from_ptr(a),
                AstKind::BinaryExpression(a) => Address::from_ptr(a),
                AstKind::PrivateInExpression(a) => Address::from_ptr(a),
                AstKind::LogicalExpression(a) => Address::from_ptr(a),
                AstKind::ConditionalExpression(a) => Address::from_ptr(a),
                AstKind::AssignmentExpression(a) => Address::from_ptr(a),
                AstKind::AssignmentTarget(a) => Address::from_ptr(a),
                AstKind::SimpleAssignmentTarget(a) => Address::from_ptr(a),
                AstKind::AssignmentTargetPattern(a) => Address::from_ptr(a),
                AstKind::ArrayAssignmentTarget(a) => Address::from_ptr(a),
                AstKind::ObjectAssignmentTarget(a) => Address::from_ptr(a),
                AstKind::AssignmentTargetWithDefault(a) => Address::from_ptr(a),
                AstKind::SequenceExpression(a) => Address::from_ptr(a),
                AstKind::Super(a) => Address::from_ptr(a),
                AstKind::AwaitExpression(a) => Address::from_ptr(a),
                AstKind::ChainExpression(a) => Address::from_ptr(a),
                AstKind::ParenthesizedExpression(a) => Address::from_ptr(a),
                AstKind::Directive(a) => Address::from_ptr(a),
                AstKind::Hashbang(a) => Address::from_ptr(a),
                AstKind::BlockStatement(a) => Address::from_ptr(a),
                AstKind::VariableDeclaration(a) => Address::from_ptr(a),
                AstKind::VariableDeclarator(a) => Address::from_ptr(a),
                AstKind::EmptyStatement(a) => Address::from_ptr(a),
                AstKind::ExpressionStatement(a) => Address::from_ptr(a),
                AstKind::IfStatement(a) => Address::from_ptr(a),
                AstKind::DoWhileStatement(a) => Address::from_ptr(a),
                AstKind::WhileStatement(a) => Address::from_ptr(a),
                AstKind::ForStatement(a) => Address::from_ptr(a),
                AstKind::ForStatementInit(a) => Address::from_ptr(a),
                AstKind::ForInStatement(a) => Address::from_ptr(a),
                AstKind::ForOfStatement(a) => Address::from_ptr(a),
                AstKind::ContinueStatement(a) => Address::from_ptr(a),
                AstKind::BreakStatement(a) => Address::from_ptr(a),
                AstKind::ReturnStatement(a) => Address::from_ptr(a),
                AstKind::WithStatement(a) => Address::from_ptr(a),
                AstKind::SwitchStatement(a) => Address::from_ptr(a),
                AstKind::SwitchCase(a) => Address::from_ptr(a),
                AstKind::LabeledStatement(a) => Address::from_ptr(a),
                AstKind::ThrowStatement(a) => Address::from_ptr(a),
                AstKind::TryStatement(a) => Address::from_ptr(a),
                AstKind::CatchClause(a) => Address::from_ptr(a),
                AstKind::CatchParameter(a) => Address::from_ptr(a),
                AstKind::DebuggerStatement(a) => Address::from_ptr(a),
                AstKind::AssignmentPattern(a) => Address::from_ptr(a),
                AstKind::ObjectPattern(a) => Address::from_ptr(a),
                AstKind::ArrayPattern(a) => Address::from_ptr(a),
                AstKind::BindingRestElement(a) => Address::from_ptr(a),
                AstKind::Function(a) => Address::from_ptr(a),
                AstKind::FormalParameters(a) => Address::from_ptr(a),
                AstKind::FormalParameter(a) => Address::from_ptr(a),
                AstKind::FunctionBody(a) => Address::from_ptr(a),
                AstKind::ArrowFunctionExpression(a) => Address::from_ptr(a),
                AstKind::YieldExpression(a) => Address::from_ptr(a),
                AstKind::Class(a) => Address::from_ptr(a),
                AstKind::ClassBody(a) => Address::from_ptr(a),
                AstKind::MethodDefinition(a) => Address::from_ptr(a),
                AstKind::PropertyDefinition(a) => Address::from_ptr(a),
                AstKind::PrivateIdentifier(a) => Address::from_ptr(a),
                AstKind::StaticBlock(a) => Address::from_ptr(a),
                AstKind::ModuleDeclaration(a) => Address::from_ptr(a),
                AstKind::ImportExpression(a) => Address::from_ptr(a),
                AstKind::ImportDeclaration(a) => Address::from_ptr(a),
                AstKind::ImportSpecifier(a) => Address::from_ptr(a),
                AstKind::ImportDefaultSpecifier(a) => Address::from_ptr(a),
                AstKind::ImportNamespaceSpecifier(a) => Address::from_ptr(a),
                AstKind::ExportNamedDeclaration(a) => Address::from_ptr(a),
                AstKind::ExportDefaultDeclaration(a) => Address::from_ptr(a),
                AstKind::ExportAllDeclaration(a) => Address::from_ptr(a),
                AstKind::ExportSpecifier(a) => Address::from_ptr(a),
                AstKind::V8IntrinsicExpression(a) => Address::from_ptr(a),
                AstKind::BooleanLiteral(a) => Address::from_ptr(a),
                AstKind::NullLiteral(a) => Address::from_ptr(a),
                AstKind::NumericLiteral(a) => Address::from_ptr(a),
                AstKind::StringLiteral(a) => Address::from_ptr(a),
                AstKind::BigIntLiteral(a) => Address::from_ptr(a),
                AstKind::RegExpLiteral(a) => Address::from_ptr(a),
                AstKind::JSXElement(a) => Address::from_ptr(a),
                AstKind::JSXOpeningElement(a) => Address::from_ptr(a),
                AstKind::JSXClosingElement(a) => Address::from_ptr(a),
                AstKind::JSXFragment(a) => Address::from_ptr(a),
                AstKind::JSXElementName(a) => Address::from_ptr(a),
                AstKind::JSXNamespacedName(a) => Address::from_ptr(a),
                AstKind::JSXMemberExpression(a) => Address::from_ptr(a),
                AstKind::JSXMemberExpressionObject(a) => Address::from_ptr(a),
                AstKind::JSXExpressionContainer(a) => Address::from_ptr(a),
                AstKind::JSXAttributeItem(a) => Address::from_ptr(a),
                AstKind::JSXSpreadAttribute(a) => Address::from_ptr(a),
                AstKind::JSXIdentifier(a) => Address::from_ptr(a),
                AstKind::JSXText(a) => Address::from_ptr(a),
                AstKind::TSThisParameter(a) => Address::from_ptr(a),
                AstKind::TSEnumDeclaration(a) => Address::from_ptr(a),
                AstKind::TSEnumBody(a) => Address::from_ptr(a),
                AstKind::TSEnumMember(a) => Address::from_ptr(a),
                AstKind::TSTypeAnnotation(a) => Address::from_ptr(a),
                AstKind::TSLiteralType(a) => Address::from_ptr(a),
                AstKind::TSConditionalType(a) => Address::from_ptr(a),
                AstKind::TSUnionType(a) => Address::from_ptr(a),
                AstKind::TSIntersectionType(a) => Address::from_ptr(a),
                AstKind::TSParenthesizedType(a) => Address::from_ptr(a),
                AstKind::TSIndexedAccessType(a) => Address::from_ptr(a),
                AstKind::TSNamedTupleMember(a) => Address::from_ptr(a),
                AstKind::TSAnyKeyword(a) => Address::from_ptr(a),
                AstKind::TSStringKeyword(a) => Address::from_ptr(a),
                AstKind::TSBooleanKeyword(a) => Address::from_ptr(a),
                AstKind::TSNumberKeyword(a) => Address::from_ptr(a),
                AstKind::TSNeverKeyword(a) => Address::from_ptr(a),
                AstKind::TSIntrinsicKeyword(a) => Address::from_ptr(a),
                AstKind::TSUnknownKeyword(a) => Address::from_ptr(a),
                AstKind::TSNullKeyword(a) => Address::from_ptr(a),
                AstKind::TSUndefinedKeyword(a) => Address::from_ptr(a),
                AstKind::TSVoidKeyword(a) => Address::from_ptr(a),
                AstKind::TSSymbolKeyword(a) => Address::from_ptr(a),
                AstKind::TSThisType(a) => Address::from_ptr(a),
                AstKind::TSObjectKeyword(a) => Address::from_ptr(a),
                AstKind::TSBigIntKeyword(a) => Address::from_ptr(a),
                AstKind::TSTypeReference(a) => Address::from_ptr(a),
                AstKind::TSTypeName(a) => Address::from_ptr(a),
                AstKind::TSQualifiedName(a) => Address::from_ptr(a),
                AstKind::TSTypeParameterInstantiation(a) => Address::from_ptr(a),
                AstKind::TSTypeParameter(a) => Address::from_ptr(a),
                AstKind::TSTypeParameterDeclaration(a) => Address::from_ptr(a),
                AstKind::TSTypeAliasDeclaration(a) => Address::from_ptr(a),
                AstKind::TSClassImplements(a) => Address::from_ptr(a),
                AstKind::TSInterfaceDeclaration(a) => Address::from_ptr(a),
                AstKind::TSPropertySignature(a) => Address::from_ptr(a),
                AstKind::TSMethodSignature(a) => Address::from_ptr(a),
                AstKind::TSConstructSignatureDeclaration(a) => Address::from_ptr(a),
                AstKind::TSInterfaceHeritage(a) => Address::from_ptr(a),
                AstKind::TSModuleDeclaration(a) => Address::from_ptr(a),
                AstKind::TSModuleBlock(a) => Address::from_ptr(a),
                AstKind::TSTypeLiteral(a) => Address::from_ptr(a),
                AstKind::TSInferType(a) => Address::from_ptr(a),
                AstKind::TSTypeQuery(a) => Address::from_ptr(a),
                AstKind::TSImportType(a) => Address::from_ptr(a),
                AstKind::TSMappedType(a) => Address::from_ptr(a),
                AstKind::TSTemplateLiteralType(a) => Address::from_ptr(a),
                AstKind::TSAsExpression(a) => Address::from_ptr(a),
                AstKind::TSSatisfiesExpression(a) => Address::from_ptr(a),
                AstKind::TSTypeAssertion(a) => Address::from_ptr(a),
                AstKind::TSImportEqualsDeclaration(a) => Address::from_ptr(a),
                AstKind::TSModuleReference(a) => Address::from_ptr(a),
                AstKind::TSExternalModuleReference(a) => Address::from_ptr(a),
                AstKind::TSNonNullExpression(a) => Address::from_ptr(a),
                AstKind::Decorator(a) => Address::from_ptr(a),
                AstKind::TSExportAssignment(a) => Address::from_ptr(a),
                AstKind::TSInstantiationExpression(a) => Address::from_ptr(a),
            };

            if !self.parents.contains_key(&address) {
                self.parents.insert(self.current_address, address);
            }
            self.kinds.entry(address).or_insert(kind);

            self.current_address = address;
        }

        fn leave_node(&mut self, kind: AstKind<'a>) {
            let address = match kind {
                AstKind::Program(a) => Address::from_ptr(a),
                AstKind::IdentifierName(a) => Address::from_ptr(a),
                AstKind::IdentifierReference(a) => Address::from_ptr(a),
                AstKind::BindingIdentifier(a) => Address::from_ptr(a),
                AstKind::LabelIdentifier(a) => Address::from_ptr(a),
                AstKind::ThisExpression(a) => Address::from_ptr(a),
                AstKind::ArrayExpression(a) => Address::from_ptr(a),
                AstKind::ArrayExpressionElement(a) => Address::from_ptr(a),
                AstKind::Elision(a) => Address::from_ptr(a),
                AstKind::ObjectExpression(a) => Address::from_ptr(a),
                AstKind::ObjectProperty(a) => Address::from_ptr(a),
                AstKind::PropertyKey(a) => Address::from_ptr(a),
                AstKind::TemplateLiteral(a) => Address::from_ptr(a),
                AstKind::TaggedTemplateExpression(a) => Address::from_ptr(a),
                AstKind::MemberExpression(a) => Address::from_ptr(a),
                AstKind::CallExpression(a) => Address::from_ptr(a),
                AstKind::NewExpression(a) => Address::from_ptr(a),
                AstKind::MetaProperty(a) => Address::from_ptr(a),
                AstKind::SpreadElement(a) => Address::from_ptr(a),
                AstKind::Argument(a) => Address::from_ptr(a),
                AstKind::UpdateExpression(a) => Address::from_ptr(a),
                AstKind::UnaryExpression(a) => Address::from_ptr(a),
                AstKind::BinaryExpression(a) => Address::from_ptr(a),
                AstKind::PrivateInExpression(a) => Address::from_ptr(a),
                AstKind::LogicalExpression(a) => Address::from_ptr(a),
                AstKind::ConditionalExpression(a) => Address::from_ptr(a),
                AstKind::AssignmentExpression(a) => Address::from_ptr(a),
                AstKind::AssignmentTarget(a) => Address::from_ptr(a),
                AstKind::SimpleAssignmentTarget(a) => Address::from_ptr(a),
                AstKind::AssignmentTargetPattern(a) => Address::from_ptr(a),
                AstKind::ArrayAssignmentTarget(a) => Address::from_ptr(a),
                AstKind::ObjectAssignmentTarget(a) => Address::from_ptr(a),
                AstKind::AssignmentTargetWithDefault(a) => Address::from_ptr(a),
                AstKind::SequenceExpression(a) => Address::from_ptr(a),
                AstKind::Super(a) => Address::from_ptr(a),
                AstKind::AwaitExpression(a) => Address::from_ptr(a),
                AstKind::ChainExpression(a) => Address::from_ptr(a),
                AstKind::ParenthesizedExpression(a) => Address::from_ptr(a),
                AstKind::Directive(a) => Address::from_ptr(a),
                AstKind::Hashbang(a) => Address::from_ptr(a),
                AstKind::BlockStatement(a) => Address::from_ptr(a),
                AstKind::VariableDeclaration(a) => Address::from_ptr(a),
                AstKind::VariableDeclarator(a) => Address::from_ptr(a),
                AstKind::EmptyStatement(a) => Address::from_ptr(a),
                AstKind::ExpressionStatement(a) => Address::from_ptr(a),
                AstKind::IfStatement(a) => Address::from_ptr(a),
                AstKind::DoWhileStatement(a) => Address::from_ptr(a),
                AstKind::WhileStatement(a) => Address::from_ptr(a),
                AstKind::ForStatement(a) => Address::from_ptr(a),
                AstKind::ForStatementInit(a) => Address::from_ptr(a),
                AstKind::ForInStatement(a) => Address::from_ptr(a),
                AstKind::ForOfStatement(a) => Address::from_ptr(a),
                AstKind::ContinueStatement(a) => Address::from_ptr(a),
                AstKind::BreakStatement(a) => Address::from_ptr(a),
                AstKind::ReturnStatement(a) => Address::from_ptr(a),
                AstKind::WithStatement(a) => Address::from_ptr(a),
                AstKind::SwitchStatement(a) => Address::from_ptr(a),
                AstKind::SwitchCase(a) => Address::from_ptr(a),
                AstKind::LabeledStatement(a) => Address::from_ptr(a),
                AstKind::ThrowStatement(a) => Address::from_ptr(a),
                AstKind::TryStatement(a) => Address::from_ptr(a),
                AstKind::CatchClause(a) => Address::from_ptr(a),
                AstKind::CatchParameter(a) => Address::from_ptr(a),
                AstKind::DebuggerStatement(a) => Address::from_ptr(a),
                AstKind::AssignmentPattern(a) => Address::from_ptr(a),
                AstKind::ObjectPattern(a) => Address::from_ptr(a),
                AstKind::ArrayPattern(a) => Address::from_ptr(a),
                AstKind::BindingRestElement(a) => Address::from_ptr(a),
                AstKind::Function(a) => Address::from_ptr(a),
                AstKind::FormalParameters(a) => Address::from_ptr(a),
                AstKind::FormalParameter(a) => Address::from_ptr(a),
                AstKind::FunctionBody(a) => Address::from_ptr(a),
                AstKind::ArrowFunctionExpression(a) => Address::from_ptr(a),
                AstKind::YieldExpression(a) => Address::from_ptr(a),
                AstKind::Class(a) => Address::from_ptr(a),
                AstKind::ClassBody(a) => Address::from_ptr(a),
                AstKind::MethodDefinition(a) => Address::from_ptr(a),
                AstKind::PropertyDefinition(a) => Address::from_ptr(a),
                AstKind::PrivateIdentifier(a) => Address::from_ptr(a),
                AstKind::StaticBlock(a) => Address::from_ptr(a),
                AstKind::ModuleDeclaration(a) => Address::from_ptr(a),
                AstKind::ImportExpression(a) => Address::from_ptr(a),
                AstKind::ImportDeclaration(a) => Address::from_ptr(a),
                AstKind::ImportSpecifier(a) => Address::from_ptr(a),
                AstKind::ImportDefaultSpecifier(a) => Address::from_ptr(a),
                AstKind::ImportNamespaceSpecifier(a) => Address::from_ptr(a),
                AstKind::ExportNamedDeclaration(a) => Address::from_ptr(a),
                AstKind::ExportDefaultDeclaration(a) => Address::from_ptr(a),
                AstKind::ExportAllDeclaration(a) => Address::from_ptr(a),
                AstKind::ExportSpecifier(a) => Address::from_ptr(a),
                AstKind::V8IntrinsicExpression(a) => Address::from_ptr(a),
                AstKind::BooleanLiteral(a) => Address::from_ptr(a),
                AstKind::NullLiteral(a) => Address::from_ptr(a),
                AstKind::NumericLiteral(a) => Address::from_ptr(a),
                AstKind::StringLiteral(a) => Address::from_ptr(a),
                AstKind::BigIntLiteral(a) => Address::from_ptr(a),
                AstKind::RegExpLiteral(a) => Address::from_ptr(a),
                AstKind::JSXElement(a) => Address::from_ptr(a),
                AstKind::JSXOpeningElement(a) => Address::from_ptr(a),
                AstKind::JSXClosingElement(a) => Address::from_ptr(a),
                AstKind::JSXFragment(a) => Address::from_ptr(a),
                AstKind::JSXElementName(a) => Address::from_ptr(a),
                AstKind::JSXNamespacedName(a) => Address::from_ptr(a),
                AstKind::JSXMemberExpression(a) => Address::from_ptr(a),
                AstKind::JSXMemberExpressionObject(a) => Address::from_ptr(a),
                AstKind::JSXExpressionContainer(a) => Address::from_ptr(a),
                AstKind::JSXAttributeItem(a) => Address::from_ptr(a),
                AstKind::JSXSpreadAttribute(a) => Address::from_ptr(a),
                AstKind::JSXIdentifier(a) => Address::from_ptr(a),
                AstKind::JSXText(a) => Address::from_ptr(a),
                AstKind::TSThisParameter(a) => Address::from_ptr(a),
                AstKind::TSEnumDeclaration(a) => Address::from_ptr(a),
                AstKind::TSEnumBody(a) => Address::from_ptr(a),
                AstKind::TSEnumMember(a) => Address::from_ptr(a),
                AstKind::TSTypeAnnotation(a) => Address::from_ptr(a),
                AstKind::TSLiteralType(a) => Address::from_ptr(a),
                AstKind::TSConditionalType(a) => Address::from_ptr(a),
                AstKind::TSUnionType(a) => Address::from_ptr(a),
                AstKind::TSIntersectionType(a) => Address::from_ptr(a),
                AstKind::TSParenthesizedType(a) => Address::from_ptr(a),
                AstKind::TSIndexedAccessType(a) => Address::from_ptr(a),
                AstKind::TSNamedTupleMember(a) => Address::from_ptr(a),
                AstKind::TSAnyKeyword(a) => Address::from_ptr(a),
                AstKind::TSStringKeyword(a) => Address::from_ptr(a),
                AstKind::TSBooleanKeyword(a) => Address::from_ptr(a),
                AstKind::TSNumberKeyword(a) => Address::from_ptr(a),
                AstKind::TSNeverKeyword(a) => Address::from_ptr(a),
                AstKind::TSIntrinsicKeyword(a) => Address::from_ptr(a),
                AstKind::TSUnknownKeyword(a) => Address::from_ptr(a),
                AstKind::TSNullKeyword(a) => Address::from_ptr(a),
                AstKind::TSUndefinedKeyword(a) => Address::from_ptr(a),
                AstKind::TSVoidKeyword(a) => Address::from_ptr(a),
                AstKind::TSSymbolKeyword(a) => Address::from_ptr(a),
                AstKind::TSThisType(a) => Address::from_ptr(a),
                AstKind::TSObjectKeyword(a) => Address::from_ptr(a),
                AstKind::TSBigIntKeyword(a) => Address::from_ptr(a),
                AstKind::TSTypeReference(a) => Address::from_ptr(a),
                AstKind::TSTypeName(a) => Address::from_ptr(a),
                AstKind::TSQualifiedName(a) => Address::from_ptr(a),
                AstKind::TSTypeParameterInstantiation(a) => Address::from_ptr(a),
                AstKind::TSTypeParameter(a) => Address::from_ptr(a),
                AstKind::TSTypeParameterDeclaration(a) => Address::from_ptr(a),
                AstKind::TSTypeAliasDeclaration(a) => Address::from_ptr(a),
                AstKind::TSClassImplements(a) => Address::from_ptr(a),
                AstKind::TSInterfaceDeclaration(a) => Address::from_ptr(a),
                AstKind::TSPropertySignature(a) => Address::from_ptr(a),
                AstKind::TSMethodSignature(a) => Address::from_ptr(a),
                AstKind::TSConstructSignatureDeclaration(a) => Address::from_ptr(a),
                AstKind::TSInterfaceHeritage(a) => Address::from_ptr(a),
                AstKind::TSModuleDeclaration(a) => Address::from_ptr(a),
                AstKind::TSModuleBlock(a) => Address::from_ptr(a),
                AstKind::TSTypeLiteral(a) => Address::from_ptr(a),
                AstKind::TSInferType(a) => Address::from_ptr(a),
                AstKind::TSTypeQuery(a) => Address::from_ptr(a),
                AstKind::TSImportType(a) => Address::from_ptr(a),
                AstKind::TSMappedType(a) => Address::from_ptr(a),
                AstKind::TSTemplateLiteralType(a) => Address::from_ptr(a),
                AstKind::TSAsExpression(a) => Address::from_ptr(a),
                AstKind::TSSatisfiesExpression(a) => Address::from_ptr(a),
                AstKind::TSTypeAssertion(a) => Address::from_ptr(a),
                AstKind::TSImportEqualsDeclaration(a) => Address::from_ptr(a),
                AstKind::TSModuleReference(a) => Address::from_ptr(a),
                AstKind::TSExternalModuleReference(a) => Address::from_ptr(a),
                AstKind::TSNonNullExpression(a) => Address::from_ptr(a),
                AstKind::Decorator(a) => Address::from_ptr(a),
                AstKind::TSExportAssignment(a) => Address::from_ptr(a),
                AstKind::TSInstantiationExpression(a) => Address::from_ptr(a),
            };

            self.current_address =
                self.parents.get(&self.current_address).copied().unwrap_or(Address::DUMMY);
        }
    }

    impl<'a, 'b> Starter<'a, 'b> {
        fn new(program: &'a Program<'b>) -> Self {
            Self {
                program,
                parents: FxHashMap::default(),
                kinds: FxHashMap::default(),
                current_address: Address::DUMMY,
            }
        }
    }

    let mut starter = Starter::new(program);
    starter.visit_program(program);

    starter.parents
}
