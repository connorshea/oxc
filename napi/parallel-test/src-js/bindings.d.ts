/* auto-generated by NAPI-RS */
/* eslint-disable */
/**
 * Register a JS worker thread.
 * Is passed a `run` function.
 *
 * # SAFETY
 * * Must only be called in response to a request to call this made by `run` calling `startWorkers`.
 * * `worker_id` must be less than thread count passed to `startWorkers` by `run`.
 * * Each call to this function must pass a unique `worker_id`.
 */
export declare function registerWorker(workerId: number, storeBuffer: (arg: Uint8Array) => void, run: (arg: number) => void): void

/**
 * Entry point from JS.
 *
 * * Determine number of threads to use.
 * * Call JS `startWorkers` function to start up worker threads
 *   (those worker threads each call `register_worker` when they start up).
 * * Initialize global rayon thread pool with same number of threads.
 * * Pass a pointer to a `ThreadData` to each rayon thread.
 * * Run workload.
 *
 * # SAFETY
 * * Must only be called from JS main thread.
 * * Must only be called once.
 */
export declare function run(startWorkers: StartThreads): Promise<boolean>
